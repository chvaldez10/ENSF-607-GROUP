@startuml
class FileHandler {
+ List<String[]> readCsv(String)
}

interface IDataLoader {
~ List<Ride> load(List<String[]>)
}

class DataLoader {
+ List<Ride> load(List<String[]>)
- Ride createRideFromRow(String[])
}

interface IFileHandler {
~ List<String[]> readCsv(String)
}

interface IDataAnalyzer {
~ double averageTripDuration(List<Ride>)
}

class Ride {
# String pickupDatetime
# String dropoffDatetime
# int passengerCount
# double pickupLongitude
# double pickupLatitude
# double dropoffLongitude
# double dropoffLatitude
# int tripDuration
<<constructor>>
<<getters and setters>>
}

class Main {
+ {static} void main(String[])
}

class EnhancedRide {
# int vendorId
# boolean storeAndFwdFlag
<<constructor>>
<<getters and setters>>
}

class DataAnalyzer {
+ double averageTripDuration(List<Ride>)
}

FileHandler --|> IFileHandler : implements
DataAnalyzer --|> IDataAnalyzer : implements

DataLoader --|> IDataLoader : implements
DataLoader --> Ride : uses
Ride <|-- EnhancedRide

Main --> FileHandler : uses
Main --> DataLoader : uses
Main --> DataAnalyzer : uses

@enduml