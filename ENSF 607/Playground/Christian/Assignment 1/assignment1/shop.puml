@startuml
    class InventoryManager {
        /' class attributes '/
        - tools: List<Tool>
        - suppliers: List<Supplier>
        - orders: List<HashMap<Integer, >>

        /' create|add tools '/
        - addTools(tool: Tool): void

        /' delete tools '/
        - deleteTool(toolId: int): void

        /' read tools '/
        - searchByName(name: String): list
        - searchById(toolId: int): Tool
        - checkStock(): void

        /' update tools '/
        - makeOrder(): void

        /' file handler '/
        - loadToolsFromFile(): void
        - loadSuppliersFromFile(): void
        - exportOrder(orderData: HashMap): void
    }

    class Tool {
        /' class attributes '/
        - toolId: int
        - name: String
        - stock: int
        - price: double
        - supplierId: int

        <<constructor>>
        <<getters>>

        /' update stock '/
        + decreaseStock()
        + increaseStock()
        + toString()
    }

    class Supplier {
        /' class attributes '/
        - supplierId: int
        - company: String
        - address: String
        - contact: String

        <<constructor>>
        <<getters>>
        + toString()
    }

    class OrderLine {
        /' class attributes '/
        - tools: List<Tool>
        - suppliers: List<Supplier>
        - orders: List<Order>

        <<constructor>>
        <<getters>>

        /' creates one order '/
        + runOrderLine()
        - makeOrder()
        - makeItem()
        - searchTool()
        - searchSupplier()
    }

    class Order {
        /' class attributes '/
        - orderId: int
        - date: String
        - items: List<Item>

        <<constructor>>
        <<getters>>
        + toString()
    }

    class Item {
        - name: String
        - supplier: String
        - quantity: int
        + <<Create>> Item(String name, String supplier, int quantity)

        <<constructor>>
        <<getters>>
        + toString()
    }

    class FileHandler {
        /' read files '/
        + {static} readToolsFromFile(): List<Tool>
        + {static} readSuppliersFromFile(): List<Supplier>
        + {static} writeOrderToFile(order: Order): void
    }

    /' relationships for InventoryManager '/
    InventoryManager --> FileHandler
    InventoryManager o-- Tool
    InventoryManager o-- Supplier
    InventoryManager o-- OrderLine

    /' relationships for Tool and Supplier '/
    Tool "many" -- "1"  Supplier

    /' relationships for Orderline, Order, Item '/
    Order --* OrderLine
    Item "many" -- "1" Order
@enduml